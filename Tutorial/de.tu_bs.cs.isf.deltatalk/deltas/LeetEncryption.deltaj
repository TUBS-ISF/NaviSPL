delta LeetEncryption {
	modifies de.tu_bs.cs.isf.deltatalk.ChatWindow {
		adds private javax.swing.JButton encryptButton;
		
		modifies setupButtons(java.awt.GridBagConstraints c) {
			original(c);
			
			encryptButton = new javax.swing.JButton();
			
			encryptButton.setVisible(Boolean.TRUE);
			encryptButton.setText("Send Leet-Encrypted");
			encryptButton.addActionListener(new java.awt.event.ActionListener() {
				public void actionPerformed(java.awt.event.ActionEvent e) {
					sendMessageEncrypted(); 
				}
			});
			
			c.gridwidth = 1;
			c.gridx = 1;
			c.gridy = 2;
			getContentPane().add(encryptButton, c);
		}
		
		adds private void sendMessageEncrypted() {
			if(inputTextPane.getText().equals(""))
				return;
			 
			outputTextPane.setText(outputTextPane.getText() + leetEncryption(inputTextPane.getText()) + "\n");
			inputTextPane.setText("");
		}
		
		adds private String leetEncryption(String raw) {
			char[] rawArray = raw.toCharArray();
			char[] encrypt = new char[rawArray.length];
			for(int i = 0; i<rawArray.length; i++) {
				if(rawArray[i] == "e".toCharArray()[0] || rawArray[i] == "E".toCharArray()[0]) {
					encrypt[i] = "3".toCharArray()[0];
				} else if(rawArray[i] == "l".toCharArray()[0] || rawArray[i] == "L".toCharArray()[0]) {
					encrypt[i] = "1".toCharArray()[0];
				} else if(rawArray[i] == "o".toCharArray()[0] || rawArray[i] == "O".toCharArray()[0]) {
					encrypt[i] = "0".toCharArray()[0];
				} else if(rawArray[i] == "t".toCharArray()[0] || rawArray[i] == "T".toCharArray()[0]) {
					encrypt[i] = "7".toCharArray()[0];
				} else if(rawArray[i] == "a".toCharArray()[0] || rawArray[i] == "A".toCharArray()[0]) {
					encrypt[i] = "4".toCharArray()[0];
				} else if(rawArray[i] == "g".toCharArray()[0] || rawArray[i] == "G".toCharArray()[0]) {
					encrypt[i] = "9".toCharArray()[0];
				} else if(rawArray[i] == "h".toCharArray()[0] || rawArray[i] == "H".toCharArray()[0]) {
					encrypt[i] = "#".toCharArray()[0];
				} else if(rawArray[i] == "s".toCharArray()[0] || rawArray[i] == "S".toCharArray()[0]) {
					encrypt[i] = "5".toCharArray()[0];
				} else {
					encrypt[i] = rawArray[i];
				}
			}
			
			return new String(encrypt);
		}
	}
}