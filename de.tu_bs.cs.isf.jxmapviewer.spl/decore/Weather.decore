 configuration delta "Weather"
	dialect <http://www.emftext.org/java>
		requires <Localization.decore>
		modifies <../src-core/de/tu_bs/cs/isf/navi/NaviApp.java>
		{
	addClassifierImport(<class:de.tu_bs.cs.isf.navi.NaviApp>, "org.json.JSONException");
	addClassifierImport(<class:de.tu_bs.cs.isf.navi.NaviApp>, "net.aksingh.owmjapis.CurrentWeather");
	addClassifierImport(<class:de.tu_bs.cs.isf.navi.NaviApp>, "net.aksingh.owmjapis.OpenWeatherMap");
	addClassifierImport(<class:de.tu_bs.cs.isf.navi.NaviApp>, "net.aksingh.owmjapis.OpenWeatherMap.Units");
	addClassifierImport(<class:de.tu_bs.cs.isf.navi.NaviApp>, "javax.swing.BorderFactory");
	addClassifierImport(<class:de.tu_bs.cs.isf.navi.NaviApp>, "javax.swing.BoxLayout");
	addClassifierImport(<class:de.tu_bs.cs.isf.navi.NaviApp>, "javax.swing.JPanel");
	addClassifierImport(<class:de.tu_bs.cs.isf.navi.NaviApp>, "java.awt.Font");
	addClassifierImport(<class:de.tu_bs.cs.isf.navi.NaviApp>, "javax.swing.JLabel");
	addMember(<class:de.tu_bs.cs.isf.navi.NaviApp>, "public net.aksingh.owmjapis.CurrentWeather getWeather(double latitude, double longitude) {
			OpenWeatherMap openWeatherMap = new OpenWeatherMap(Units.METRIC, \"e6d53f6128339f0b361aa69105feecea\");

			try {
				CurrentWeather currentWeather = openWeatherMap.currentWeatherByCoordinates((float)latitude,(float) longitude);
				return currentWeather;		
				
			} catch (JSONException e) {
				e.printStackTrace();
			}
			return null; 
		}
");
	modifyStatementListContainer(<method:de.tu_bs.cs.isf.navi.NaviApp.addMenu()>, "public void addMenu() {
		addMenu$Weather();
			menuPanelList.put(\"Wetter\", addWeather());
	}
", "Weather", true);
	addMember(<class:de.tu_bs.cs.isf.navi.NaviApp>, "private javax.swing.JPanel addWeather() {		
			JPanel weatherPane = new JPanel();
			weatherPane.setLayout(new BoxLayout(weatherPane, BoxLayout.PAGE_AXIS));
			
			
			final JLabel temperature = new JLabel();
			temperature.setFont(temperature.getFont().deriveFont(15.0f));
		
			final JLabel weather = new JLabel();
			weather.setFont(weather.getFont().deriveFont(15.0f));
			
			addWind(weatherPane);
			

			weatherPane.add(temperature);
		
			weatherPane.add(weather);
			weatherPane.setBorder(BorderFactory.createEmptyBorder(10,10,10,10));
		
			mapViewer.addMouseListener(new java.awt.event.MouseListener() {
				
				public void mouseClicked(java.awt.event.MouseEvent e) {
			        
			        java.awt.Point point = e.getPoint();
			        org.openstreetmap.gui.jmapviewer.Coordinate co = (org.openstreetmap.gui.jmapviewer.Coordinate) mapViewer.getPosition(point);
					CurrentWeather currentweather = getWeather(co.getLat(), co.getLon());
					temperature.setText(String.valueOf(currentweather.getMainInstance().getTemperature())+\" Â°C\");
					weather.setText(currentweather.getWeatherInstance(0).getWeatherDescription());
					updateWind(currentweather);
				}	
				
				public void mousePressed(java.awt.event.MouseEvent e) {	}
	
				
				public void mouseReleased(java.awt.event.MouseEvent e) { }
	
				
				public void mouseEntered(java.awt.event.MouseEvent e) {	 }
	
				
				public void mouseExited(java.awt.event.MouseEvent e) {	 }
	        });
			return weatherPane;
		
		}
");
	addMember(<class:de.tu_bs.cs.isf.navi.NaviApp>, "private void addWind(javax.swing.JPanel panel) {}
");
	addMember(<class:de.tu_bs.cs.isf.navi.NaviApp>, "private void updateWind(net.aksingh.owmjapis.CurrentWeather currentweather) {}
");
	}
	