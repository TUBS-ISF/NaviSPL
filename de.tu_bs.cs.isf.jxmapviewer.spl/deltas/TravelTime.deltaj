delta TravelTime requires Routing {
	
	modifies de.tu_bs.cs.isf.navi.routing.RoutingCalculator {
		
		modifies interpretJSONString(String output) {
			original(output);
			
			JSONObject summary = (JSONObject) routes.get("summary");
			route.setDuration(summary.getDouble("duration"));
		}
	}
	
	modifies de.tu_bs.cs.isf.navi.routing.RoutingInformation {
		adds private double duration;	
		
		adds public double getDuration() {
			return duration;
		}

		adds public void setDuration(double duration) {
			this.duration = duration;
		}
	}

	modifies de.tu_bs.cs.isf.navi.NaviApp {
	
		modifies addMenu(){
			original();
			addTravelTime();
		}
		
		modifies paintRoute(){
			original();
			calcTravelTime();
		}
		
		adds private javax.swing.JPanel durPanel = new javax.swing.JPanel();
		adds private javax.swing.JLabel durLabel = new javax.swing.JLabel();
		
		adds private void addTravelTime(){	
		
			durPanel.setLayout(new java.awt.GridBagLayout());
			java.awt.GridBagConstraints bagCon = new java.awt.GridBagConstraints();
			javax.swing.JLabel textLabel = new javax.swing.JLabel("Estimated Travel Time: ");
			durLabel.setText("00:00");
			
			bagCon.fill = 1;
			bagCon.gridx = 0;
			bagCon.gridy = 0;
			bagCon.weightx = 1;
			durPanel.add(textLabel, bagCon);
			bagCon.fill = 1;
			bagCon.gridx = 1;
			bagCon.gridy = 0;
			bagCon.weightx = 1;
			durPanel.add(durLabel, bagCon);
			menuPanelList.put("Travel Time", durPanel);
			
		}
		
		adds private void calcTravelTime() {
			double durationInSek = routingInformation.getDuration();
			durLabel.setText(formatTime((int) durationInSek));
		}
		
		adds private String formatTime(int time) {
			int durHrs = (int) Math.floor(time / 3600);
			int durMins = (int) (Math.floor(time / 60)) % 60;
			
			String ret = String.valueOf(durHrs);
			if (durHrs < 10) {
				ret = "0" + ret;
			}
			ret += ":";
			
			String temp = String.valueOf(durMins);
			if (durMins < 10) {
				temp = "0" + temp;
			}
			
			ret += temp;
			
			return ret;
		}
	}
}